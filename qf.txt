/home/samuel/Documentos/med-seg-tfm/src/cli/cli_utils.py:173:5:def output_default_config(to_stdout: bool, filename: str | None) -> None:
/home/samuel/Documentos/med-seg-tfm/src/dashboard.py:63:5:def normalize_to_uint8(slice2d: np.ndarray) -> np.ndarray:
/home/samuel/Documentos/med-seg-tfm/src/net/FSRCNN/fsrcnn.py:39:9:    def from_scale(cls, scale_factor: int, normalize: str = "auto", return_uint8: bool = True) -> "FSRCNN":
/home/samuel/Documentos/med-seg-tfm/src/net/unet/unet.py:59:9:    def __len__(self) -> int:
/home/samuel/Documentos/med-seg-tfm/src/net/unet/unet.py:62:9:    def __getitem__(self, idx: int):
/home/samuel/Documentos/med-seg-tfm/src/net/unet/unet.py:832:9:    def _compute_mean_std_metrics(self, metrics_list: List[SegmentationMetrics]) -> dict:
/home/samuel/Documentos/med-seg-tfm/src/net/unet/unet.py:850:9:    def _write_summary(self, metrics_dict: dict) -> None:
/home/samuel/Documentos/med-seg-tfm/src/schemas/pipeline_schemas.py:163:9:    def validate_single_config(cls, values):
/home/samuel/Documentos/med-seg-tfm/src/schemas/pipeline_schemas.py:196:9:    def __str__(self):
/home/samuel/Documentos/med-seg-tfm/src/schemas/pipeline_schemas.py:204:9
/home/samuel/Documentos/med-seg-tfm/src/steps/visualization/core/plotter.py:372:9:    def plot_metrics_radar(
